package com.redhat.summit2015.ceplab
 
import java.math.BigDecimal;

import com.redhat.summit2015.ceplab.model.Account;
import com.redhat.summit2015.ceplab.model.AccountStatus;
import com.redhat.summit2015.ceplab.model.Transaction;
import com.redhat.summit2015.ceplab.model.TransactionStatus;

declare Transaction
    @role( event )
end

/*
    When there is an account with a $0 dollar balance set the status to AccountStatus.BLOCKED
*/
rule "Zero Balance"
    when
        $account : Account( balance <= BigDecimal.ZERO && status != AccountStatus.BLOCKED )
    then
        System.out.println("blocking account");
end

rule "Transaction is suspect if the amount is more than twice the average of the last 4 Credit Card transactions"
    dialect "mvel"
    when
        $average: Number() from accumulate (
            Transaction( $amount: amount   ) over window:time ( 30d ) from entry-point CreditCard,
            average($amount))
        $transaction: Transaction( amount > $average  ) from entry-point CreditCard
    then
        $transaction.setStatus(TransactionStatus.DENIED);
        System.out.println("Transaction Denied! This Credit Card transaction amount of USD " + $transaction.getAmount() + " is more than twice the average amount ( USD "  + $average + ") for the last 30 days");
end
